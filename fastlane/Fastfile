fastlane_version "1.90.0"
default_platform :android
platform :ios do
  desc "Verify your XCode installation"
  lane :verify do
    verify_xcode
  end
  desc "Restore Ionic configuration"
  lane :restore do
    sh "ionic state restore"
  end
  desc "Increase version (major)"
  lane :bumpmajor do
    sh "cd scripts && node increaseVersion.js -- -s \"major\""
  end
  desc "Increase version (minor)"
  lane :bumpminor do
    sh "cd scripts && node increaseVersion.js -- -s \"minor\""
  end
  desc "Increase version (patch)"
  lane :bumppatch do
    sh "cd scripts && node increaseVersion.js -- -s \"patch\""
  end
  desc "Dump development files"
  lane :dumpdev do
    sh "rm -rf www/* && webpack --progress --colors -d"
  end
  desc "Dump production files"
  lane :dumpprod do
    sh "rm -rf www/* && webpack --progress --colors -d --config webpack.config.prod.js -p"
  end
  desc "Open unminified iOS project"
  lane :builddev do
    sh "npm run dumpdev && open platforms/ios/Roeper\ Record.xcodeproj && echo \"Make sure bitcode is disabled, and that your provisioning and code signing is correct!\""
  end
  desc "Open production iOS project"
  lane :buildprod do
    sh "sudo ./release.ios.sh"
  end
  after_all do |lane|
    notification(subtitle: "Activity finished!", message: "Check the terminal for status.")
  end
  error do |lane, exception|
    notification(subtitle: "An error occurred!", message: "Something probably failed :( check your terminal for information.")
  end
end
platform :android do
  desc "Restore Ionic configuration"
  lane :restore do
    sh "ionic state restore"
  end
  desc "Increase version (major)"
  lane :bumpmajor do
    sh "cd scripts && node increaseVersion.js -- -s \"major\""
  end
  desc "Increase version (minor)"
  lane :bumpminor do
    sh "cd scripts && node increaseVersion.js -- -s \"minor\""
  end
  desc "Increase version (patch)"
  lane :bumppatch do
    sh "cd scripts && node increaseVersion.js -- -s \"patch\""
  end
  desc "Dump development files"
  lane :dumpdev do
    sh "rm -rf www/* && webpack --progress --colors -d"
  end
  desc "Dump production files"
  lane :dumpprod do
    sh "rm -rf www/* && webpack --progress --colors -d --config webpack.config.prod.js -p"
  end
  desc "Compile a development release for Android"
  lane :builddev do
    sh "BUILD_MULTIPLE_APKS=true cordova build android --device"
  end
  desc "Compile a production release for Android"
  lane :buildprod do
    sh "sudo ./release.android.sh"
  end
  desc "Send most recent build to Google Play (production)"
  lane :up do
    sh "supply --apk build/wphc-android-armv7.apk"
end